{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/canaries-and-dinosaurs","result":{"data":{"markdownRemark":{"id":"6c0679d9-0ab3-5d11-ab43-7f967de0fcdd","html":"<p><img src=\"/media/canary/canary.jpg\" alt=\"canary.jpg\"></p>\n<p>Before starting talking about canaries, I would want to talk a bit about dinosaurs too. While I was gathering ideas for this post, a possible big release happened in the JS world and I would like to share it with you.</p>\n<h2 id=\"introducing-deno-ü¶ï\" style=\"position:relative;\"><a href=\"#introducing-deno-%F0%9F%A6%95\" aria-label=\"introducing deno ü¶ï permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introducing <a href=\"https://deno.land/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Deno</a> ü¶ï</h2>\n<p>If you‚Äôre familliar with <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Node</a>, you should know that its creator, <a href=\"https://tinyclouds.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Ryan Dahl</a>, has been working these last years in another JavaScript backend environment which it‚Äôs called Deno. Writing about this would require a whole series of posts, so summarizing, its goal is to cover Node‚Äôs flaws with modern features whilst it encreases the security. If you want to check out more about Deno, you could check out <a href=\"https://deno.land/v1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">the post about its v1 release</a> or you could check <a href=\"https://www.freecodecamp.org/news/the-deno-handbook/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">this awesome Deno Handbook</a> in <a href=\"https://www.freecodecamp.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">freeCodeCamp</a>.</p>\n<p>Time will say if it replaces Node or not. Probably, both will coexist. But I believe that is a tool worth keeping an eye at.</p>\n<h2 id=\"back-to-canaries-\" style=\"position:relative;\"><a href=\"#back-to-canaries-\" aria-label=\"back to canaries  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Back to canaries üê§</h2>\n<p>Lets get back to bussiness, in this case, frontend projects. When developing these, a first step is to set a list of supported browsers where the app needs to run propperly, and develop the app in way to do so. This requests to put special care in the tools and features we use to develop the app, because not all browsers support all the features, and writting a function in a way or another can make the code break in a certain browser-version. for example, it is commonly known the struggle of giving support to our old <em>friend</em> Ie11, which is slowly seing how sites are stoping to support it. This week has been linkedin‚Äôs turn.</p>\n<p><img src=\"/media/canary/linkedin-ie11.png\" alt=\"linkedin-ie11\"></p>\n<p>Also, a browser can change the way it supports a feature or even drop it in a next version. So a common habit is to use a <em>Dev</em> or <em>Canary</em> browser-versions to be ahead of the changes, as these versions usually bring new and experimental features. For example, if your app uses 3rd party <strong>cookies</strong>, you‚Äôd need to know how these cookies are going to behave after Chrome applies its <a href=\"https://blog.chromium.org/2020/01/building-more-private-web-path-towards.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Privacy Sandbox</a>.</p>\n<p>But <span style=\"font-weight: 700; color: red\">don‚Äôt take <em>Canaries</em> as silver bullets</span>. My point is, Canary versions, as they only meant for developers and testers, <strong>can be ahead in certain aspects but can be more poor in another ones</strong>, as they don‚Äôt worry about stability as much as stable versions, which are meant to be used by the vast majority and hence, give the best and most stable user-experience.</p>\n<p>This has happened to us this week. As we develop apps that are run in iframes in our customers‚Äô sites, we have to be constantly managing 1st party vs 3rd party data, including cookies and local storage. So, despite testing in all the browsers from our supported list, <strong>we tend to use mainly <em>Chrome Canary</em> or <em>Dev</em> for developmnent</strong> as it is 3 major versions ahead from the stable one and we can check all our features will continue running after the browser updates.</p>\n<p>But, we‚Äôve beein seeing a flickering in the content when our app resizes its parent iframe (don‚Äôt worry about this, we do it communicating via PostMessage with one of our scripts which is running in the customer‚Äôs site). So, as we tend to deliver our software with the best quality, we introduced some stories in our backlog to research this issue. At first, a team-mate spent a couple of days researching and refactoring our CSS trying to make it lighter, in order for the browser to parse it more efficiently. But it was not working.</p>\n<p>From my side, after some research, <strong>I discovered that it wasn‚Äôt something specific from our app</strong>, because it was happening on any iframe. But I saw that <strong>the iframe was much more responsive when its content was in the first party</strong> (setting the content programatically via JS) <strong>instead of being 3r party</strong> (setting up it <em>src</em> and letting the content being downloaded on its own). So, as a test and as a documentation for my research, I developed a small project where two iframes (one 3rd party and another one in 1st) could be resized on will. Here‚Äôs the code if you want to check it.</p>\n<div style=\"display: grid; justify-items: center;\">\n  <iframe src=\"https://codesandbox.io/embed/resizing-iframe-performance-gfbgw?fontsize=14&hidenavigation=1&theme=dark\"\n  style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\"\n  title=\"resizing-iframe-performance\"\n  allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr\"\n  sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"></iframe></div>\n<p>In the project we could see how the 3rd party iframe (on the left) was flicking while the one in 1st party was not. The test was the proof that our app was behaving badly. But wait! After checking it in FireFox and in Edge, the 3rd party iframe was behaving quite better, and almost as stable as th 1st party one. So I was thinking that something was wrong here, <em>‚ÄúHow can Crome, being a browser that is almost the standard and with highest user acceptance ratio, be failing rendering this simple content, while its competitors work fine?‚Äù</em></p>\n<p>So, I went for <strong>Chrome Stable</strong> and what was my surprise when the flickering dissappeared. The content was being rendered and resized smoothly, no matter if it was on a 3rd or a 1st party iframe. Here we can see the difference, the <strong>left gif corresponds to the app being run in <em>Chrome Dev</em></strong> and the one on the <strong>right is being run in <em>Chrome Stable</em></strong>.</p>\n<div style=\"display: grid; grid-template-columns: 50% 50%; justify-items: center;\">\n  <div style=\"display: flex; flex-direction: column; border-right: solid 1px; padding: 0 5px 0 0;\">\n  <h4>Dev/Canary</h4>\n  <img src=\"/media/canary/resizing-dev.gif\">\n  </div>\n   <div style=\"display: flex; flex-direction: column; border-left: solid 1px; padding: 0 0 0 5px;\">\n  <h4>Stable</h4>\n  <img src=\"/media/canary/resizing-stable.gif\">\n  </div>\n</div>\n<h2 id=\"conclussions\" style=\"position:relative;\"><a href=\"#conclussions\" aria-label=\"conclussions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Conclussions</h2>\n<p>It seems that, despite having the latests features, <strong>the <em>Dev</em> version does not care so much about rendering</strong> content efficiently for the user. Once known, this can be logical as the <em>Dev</em> version can be meant for developers to play with the latest features in the engine, but <strong>can be tricky if you are unaware of this and can make you lose some valueable time of yours</strong>. That is the reason I marked in red not to consider them silver-bullets and think that as the app runs in a <em>Dev/Canary</em> version, will run in the <em>Stable</em> one, and viceversa.</p>\n<p>My recommendation is to <strong>not to take anything for granted, and test all you can</strong> (with manual and automated tests) on each browser/environment you need. You know, better safe than sorry..</p>\n<p>Thanks for reading ;-)</p>","fields":{"slug":"/posts/canaries-and-dinosaurs","tagSlugs":["/tag/deno/","/tag/chrome/","/tag/development/"],"readingTime":{"text":"6 min read"}},"frontmatter":{"date":"2020-05-18","description":"When developing an app, be aware of any browser version. Oh, and also, look for a dinosaur that has come to life in the middle of 2020.","tags":["Deno","Chrome","Development"],"title":"Be aware of canaries (and dinosaurs)","socialImage":"/media/canary/canary.jpg"}}},"pageContext":{"slug":"/posts/canaries-and-dinosaurs"}}}