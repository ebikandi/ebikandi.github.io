{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/we-are-live","result":{"data":{"markdownRemark":{"id":"17064ade-2a70-5d34-8d02-c99dea2b927b","html":"<p><img src=\"/media/alive/alive.jpg\" alt=\"alive.jpg\"></p>\n<p>So, we’re live. I have been thinking from long ago to build my personal site just to have online presence and write sometimes about what I have researched or what other crazy idea has come to my mind (this happens to much I reckon). After putting it off and prioritizing any other thing, finally I decided to take the step.</p>\n<p>First of all, I want to explain my decision to use English on the site being <a href=\"https://en.wikipedia.org/wiki/Basque_language\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Euskera</a> my native and loved language. Sadly, Euskera is a minoritary language which is barely used out of the Basque Country so I had to choose another language just to make the site understandable to the people. Being English the most used (and I would say official) langugae used in IT, I thought that it was the better option. Although, in a future development I will give the site the option to be displayed in Euskera too.</p>\n<p>So, back to the site, the development has been pretty straighforward. The site has been developed using the JAMStack, specifically <a href=\"https://www.gatsbyjs.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Gatsby</a> and <a href=\"https://www.netlify.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Netlify</a>, apart from being deployed to <a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub Pages</a>. For the ones unfamiliar with this stack, I recommend to read the <a href=\"https://www.netlify.com/oreilly-jamstack/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Modern Web Development on the JAMstack</a>. Quite a handy book which can give you the idea why this stack is gainning usage over some more “traditional” ones.</p>\n<h2 id=\"gatsby\" style=\"position:relative;\"><a href=\"#gatsby\" aria-label=\"gatsby permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gatsby</h2>\n<p>It is Static Site Generator based on React. Basically, a static site is a site which is rendered on the server (completely or partially) and served as HTML to the browser. This gives us the ability to serve very fast loading sites, and if they are powered by React, even better.</p>\n<p>Also, if you are familiar with the Wordpress Themes, Gatsby has a simillar concept called <a href=\"https://www.gatsbyjs.org/starters/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">starters</a>. It allows to create our site starting from a boilerplate with preinstalled <a href=\"https://www.gatsbyjs.org/plugins/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">plugins</a> without the need of creating one project from scratch. For example, for this site I used the <a href=\"https://github.com/alxshelepenok/gatsby-starter-lumen\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Lumen Starter</a> which comes almost with anything I needed this case and with a couple of tweaks, my site was ready to go.</p>\n<h2 id=\"github-pages\" style=\"position:relative;\"><a href=\"#github-pages\" aria-label=\"github pages permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GitHub Pages</h2>\n<p>What can I say about Github that anyone who works on IT does not know already? Nothing. This Git repository hosting platform has plenty of services and one of those is Github Pages. It gives us the chance to publish a site for each repo that is configured completely free. What better option to host my dev related site other than a dev related platform?</p>\n<p>Gatsby has a great documentation, and on one point tells how to configure to <a href=\"https://www.gatsbyjs.org/docs/how-gatsby-works-with-github-pages/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">deploy the site to GitHub Pages</a>. Basically it relies on the <a href=\"https://www.npmjs.com/package/gh-pages\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">gh-pages</a> package to do the thing. For example, as I did not want to set any subdomain or anything and deploy to <em>enekobi.github.io</em>, it was enough to add this command to my <em>package.json</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"deploy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gatsby clean &amp;&amp; gatsby build &amp;&amp; gh-pages -d public\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>But wait, this step is tricky. My site is a <strong><em>User Page</em></strong>, GitHub specifies that <strong>“User pages must be built from the master branch.”</strong> so if we deploy the page, the compiled site’s code will overwrite the codebase that is on the master branch and we <strong>could loose the code</strong>. This issue can be problematic but once understood it can be sorted easily. It’s enough for us <strong>create another branch</strong>, for example <em>gh-pages</em>, and use it as a default for coding. The <strong><em>master</em> branch will only be used to host the generated site</strong>.</p>\n<p><img src=\"/media/alive/branches.png\" alt=\"branches.png\"></p>\n<h2 id=\"netlify\" style=\"position:relative;\"><a href=\"#netlify\" aria-label=\"netlify permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Netlify</h2>\n<p>Ok, I have my site ready and I can put it online running a simple commmand any time I want to deploy a change. But, didn’t we learn sometime ago that anything that can be automated, should be that way? Maybe I am a bit lazy but running the <code class=\"language-text\">deploy</code> command takes some time and I don’t want to stare to my <a href=\"https://ohmyz.sh/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Zsh</a> window until it finishes.</p>\n<p>Luckily, Netlify has a <a href=\"https://www.netlify.com/pricing/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">free plan</a> which is pretty awesome and it cobbers all the needs of a little site, including CDNs and <strong>Continous Deployment</strong>. After logging in, we can create a site in Netlify in multiple ways (I used their fantastic <a href=\"https://docs.netlify.com/cli/get-started/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Netlify Cli</a>) specifying a GitHub repo to fetch the code from it. Netlify will automatically create a CI/CD pipeline for us, so whenever you <em>push</em> a change to the remote repo, Netlify will run the build and deploy the latest version live in one of it’s sites (for example <a href=\"https://enekobi.netlify.app/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://enekobi.netlify.app/</a>), which is awesome.</p>\n<p>But don’t forget that we want our page to be live on GitHub Pages, not only on Netlify. This will add another peculiarity too. The <em>gh-pages</em> packages assumes that is run inside a GitHub repo, which is not when we run the deploy on a Netlify instance. This can be sorted out specifiying which <strong>repo</strong> we want to deploy to using the <a href=\"https://www.npmjs.com/package/gh-pages#options\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><em>gh-pages</em> options</a>. Sadly, these options can not be configured using the CLI but we can set them introducing a <em>deploy.js</em> script. Our case will be simply as this (note the <em>branch</em> and the <em>repo</em> options):</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> ghpages <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gh-pages'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nghpages<span class=\"token punctuation\">.</span><span class=\"token function\">publish</span><span class=\"token punctuation\">(</span>\n  path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    branch<span class=\"token operator\">:</span> <span class=\"token string\">'master'</span><span class=\"token punctuation\">,</span>\n    repo<span class=\"token operator\">:</span> <span class=\"token string\">'https://github.com/enekobi/enekobi.github.io.git'</span><span class=\"token punctuation\">,</span>\n    user<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">'Eneko Bikandi'</span><span class=\"token punctuation\">,</span>\n      email<span class=\"token operator\">:</span> <span class=\"token string\">'ebikandi001@gmail.com'</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Successfully deployed to GitHub Pages'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>And then we only have to change our <em>deploy</em> script from the <em>package.json</em> to call the new <em>deploy.js</em></p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"deploy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gatsby clean &amp;&amp; gatsby build &amp;&amp; node ./deploy.js\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Finally, we only have to go to the <strong>Build &#x26; Deploy</strong> settings in our site’s Netlify dashboard and set the <em>Build Command</em> in order to run the command we set to deploy to Github Pages.</p>\n<p><img src=\"/media/alive/netlify.png\" alt=\"netlify.png\"></p>\n<h2 id=\"conclusion\" style=\"position:relative;\"><a href=\"#conclusion\" aria-label=\"conclusion permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Conclusion</h2>\n<p>It has been a fun tiny project to dive a bit more in these technologies and the perfect excuse to finally build my site. Of course,i have left some TODOs and work from the future to improve the site, but it is nice start. Anyway, to keep the CI/CD pipeline simpler, for the final site I have <strong>removed the <em>gh-pages</em> dependency</strong> and used only the one from <em>Netlify</em>, because it’s the simplest approach.</p>\n<p>I hope that you enjoyed the reading as much I enjoyed developing the project and hope I gave you the curiosity to play with these handy tools. From my side, I’ll try to continue improving and let’s see if i can come up with more posts and keep improving the quality of those as I continue writing ;-)</p>","fields":{"slug":"/posts/we-are-live","tagSlugs":["/tag/gatsby/","/tag/netlify/","/tag/development/"],"readingTime":{"text":"6 min read"}},"frontmatter":{"date":"2020-04-19","description":"Site live! What better topic for the first post other than explaining why I need a site and how I \"built\" it.","tags":["Gatsby","Netlify","Development"],"title":"We are live!","socialImage":"/media/alive/alive.jpg"}}},"pageContext":{"slug":"/posts/we-are-live"}}}